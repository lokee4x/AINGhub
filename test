-- Load Rayfield UI Library
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

-- Create the main UI window
local Window = Rayfield:CreateWindow({
    Name = "Glass Model Highlighter",
    LoadingTitle = "Loading UI...",
    LoadingSubtitle = "by lokee4x",
    ConfigurationSaving = {
        Enabled = false,
    },
    Discord = {
        Enabled = false,
    },
    KeySystem = false
})

-- Create Tabs
local MainTab = Window:CreateTab("Home", 4483362458) -- Home Icon
local HighlightTab = Window:CreateTab("Highlight", 4483362458) -- Glass Icon

-- Create Home Section
MainTab:CreateSection("Welcome")
MainTab:CreateParagraph({
    Title = "Glass Model Highlighter",
    Content = "Use this UI to highlight models in the game."
})

-- Navigation Button to Highlight Tab
MainTab:CreateButton({
    Name = "Go to Highlight Options",
    Callback = function()
        Window:SelectTab(HighlightTab)
    end
})

-- Highlight Section
HighlightTab:CreateSection("Highlight Models")

-- Model Selection Dropdown
local selectedModel = nil
local modelDropdown = HighlightTab:CreateDropdown({
    Name = "Select a Model",
    Options = {"Correct", "Wrong"},
    Callback = function(selected)
        selectedModel = workspace.Glasses:FindFirstChild(selected)
        if selectedModel then
            Rayfield:Notify({
                Title = "Model Selected",
                Content = "You selected: " .. selected,
                Duration = 2
            })
        else
            Rayfield:Notify({
                Title = "Error",
                Content = "Model '" .. selected .. "' not found.",
                Duration = 2
            })
        end
    end
})

-- Color Picker for Custom Highlighting
local highlightColor = "Bright red"
HighlightTab:CreateColorPicker({
    Name = "Select Highlight Color",
    Callback = function(color)
        highlightColor = color
    end
})

-- Function to Change Model Color
local function changeModelColor(model, colorName)
    if model then
        for _, part in pairs(model:GetDescendants()) do
            if part:IsA("BasePart") then
                part.BrickColor = BrickColor.new(colorName)
            end
        end
        Rayfield:Notify({
            Title = "Success",
            Content = "Highlighted " .. model.Name .. " with color " .. colorName,
            Duration = 2
        })
    else
        Rayfield:Notify({
            Title = "Error",
            Content = "No model selected or model not found.",
            Duration = 2
        })
    end
end

-- Apply Highlight Button
HighlightTab:CreateButton({
    Name = "Apply Highlight",
    Callback = function()
        if selectedModel then
            changeModelColor(selectedModel, highlightColor)
        else
            Rayfield:Notify({
                Title = "Error",
                Content = "Please select a model first.",
                Duration = 2
            })
        end
    end
})

-- Back Button to Home
HighlightTab:CreateButton({
    Name = "â¬… Back to Home",
    Callback = function()
        Window:SelectTab(MainTab)
    end
})
